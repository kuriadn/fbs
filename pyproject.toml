[build-system]
requires = ["setuptools>=59.6.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fbs-fastapi"
version = "3.1.0"
description = "FastAPI-based business suite with automated Odoo module generation"
readme = "README.md"
license = {text = "Proprietary"}
authors = [
    {name = "Fayvad Digital", email = "team@fayvad.com"}
]
maintainers = [
    {name = "FBS Development Team", email = "dev@fayvad.com"}
]
keywords = [
    "fastapi", "odoo", "erp", "business", "msme", "accounting",
    "workflows", "compliance", "bi", "document-management",
    "license-management", "module-generation", "multi-tenant", "async"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
    "Framework :: FastAPI :: 0.100",
    "Framework :: FastAPI :: 0.101",
    "Framework :: FastAPI :: 0.102",
    "Framework :: FastAPI :: 0.103",
    "Framework :: FastAPI :: 0.104",
    "Framework :: FastAPI :: 0.105",
    "Topic :: Office/Business",
    "Topic :: Office/Business :: Financial :: Accounting",
    "Topic :: Office/Business :: Financial :: Point of Sale",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Database :: Front-Ends",
    "Topic :: System :: Systems Administration",
    "Topic :: Text Processing :: Markup :: XML",
]
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.100.0,<1.0.0",
    "uvicorn[standard]>=0.23.0,<1.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "pydantic-settings>=2.0.0,<3.0.0",
    "sqlalchemy[asyncio]>=2.0.0,<3.0.0",
    "asyncpg>=0.29.0,<1.0.0",
    "alembic>=1.12.0,<2.0.0",
    "redis[hiredis]>=4.5.0,<6.0.0",
    "cryptography>=41.0.0,<43.0.0",
    "PyJWT>=2.8.0,<3.0.0",
    "python-multipart>=0.0.6,<1.0.0",
    "passlib[bcrypt]>=1.7.0,<2.0.0",
    "httpx>=0.24.0,<1.0.0",
    "aiohttp>=3.8.0,<4.0.0",
    "pandas>=1.5.0,<3.0.0",
    "numpy>=1.21.0,<2.0.0",
    "Pillow>=9.5.0,<11.0.0",
    "python-magic>=0.4.27,<1.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "requests>=2.31.0,<3.0.0",
    "urllib3>=1.26.0,<2.0.0",
    "structlog>=23.1.0,<25.0.0",
    "sentry-sdk[fastapi]>=1.32.0,<3.0.0",
    "aiosmtplib>=2.0.0,<4.0.0",
    "email-validator>=2.0.0,<3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.11.0,<4.0.0",
    "pytest-xdist>=3.3.0,<4.0.0",
    "factory-boy>=3.3.0,<4.0.0",
    "faker>=19.0.0,<20.0.0",
    "coverage>=7.3.0,<8.0.0",
    "black>=23.7.0,<24.0.0",
    "flake8>=6.0.0,<7.0.0",
    "isort>=5.12.0,<6.0.0",
    "mypy>=1.5.0,<2.0.0",
    "responses>=0.23.0,<1.0.0",
    "freezegun>=1.2.0,<2.0.0",
    "httpx>=0.24.0,<1.0.0",
    "locust>=2.15.0,<3.0.0",
    "bandit>=1.7.0,<2.0.0",
    "safety>=2.3.0,<2.4.0",
]
test = [
    "pytest>=7.4.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.11.0,<4.0.0",
    "pytest-xdist>=3.3.0,<4.0.0",
    "factory-boy>=3.3.0,<4.0.0",
    "faker>=19.0.0,<20.0.0",
    "coverage>=7.3.0,<8.0.0",
]
docs = [
    "sphinx>=6.0.0,<7.0.0",
    "sphinx-rtd-theme>=1.3.0,<2.0.0",
    "myst-parser>=1.0.0,<2.0.0",
]

[project.urls]
Documentation = "https://github.com/kuriadn/fbs/tree/main/docs"
Source = "https://github.com/kuriadn/fbs"
Tracker = "https://github.com/kuriadn/fbs/issues"
Changelog = "https://github.com/kuriadn/fbs/releases"

[project.scripts]
fbs-api = "fbs_fastapi.main:app"

[tool.setuptools]
packages = ["fbs_fastapi"]
include-package-data = true
zip-safe = false

[tool.setuptools.package-data]
fbs_fastapi = ["**/*.json", "**/*.yaml", "**/*.yml", "**/*.xml", "**/*.html", "**/*.css", "**/*.js", "**/*.md"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["fbs_fastapi"]

[tool.pytest.ini_options]
python_files = ["tests.py", "test_*.py", "*_tests.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--asyncio-mode=auto",
    "--cov=fbs_fastapi",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
    "security: Security tests",
    "slow: Slow running tests",
    "asyncio: Async tests",
]
testpaths = ["tests", "fbs_fastapi/tests"]

[tool.coverage.run]
source = ["fbs_fastapi"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
    "**/alembic/**",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
