[build-system]
requires = ["setuptools>=59.6.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fbs-suite"
version = "2.0.2"
description = "Odoo-driven business management platform for Django"
readme = "README.md"
license = {text = "Proprietary"}
authors = [
    {name = "Fayvad Digital", email = "team@fayvad.com"}
]
maintainers = [
    {name = "FBS Development Team", email = "dev@fayvad.com"}
]
keywords = [
    "django", "odoo", "erp", "business", "msme", "accounting", 
    "workflows", "compliance", "bi", "document-management", 
    "license-management", "virtual-fields", "multi-tenant"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Topic :: Office/Business",
    "Topic :: Office/Business :: Financial :: Accounting",
    "Topic :: Office/Business :: Financial :: Point of Sale",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Database :: Front-Ends",
    "Topic :: System :: Systems Administration",
    "Topic :: Text Processing :: Markup :: XML",
]
requires-python = ">=3.8"
dependencies = [
    "Django>=4.2.0,<5.1.0",
    "psycopg2-binary>=2.9.0,<3.0.0",
    "django-cors-headers>=4.3.0,<5.0.0",
    "python-dateutil>=2.8.0,<3.0.0",
    # "xmlrpc-client>=1.0.0",  # Built-in Python module, no need to install
    "pandas>=1.5.0,<3.0.0",
    "numpy>=1.21.0,<2.0.0",
    "redis>=4.5.0,<5.0.0",
    "django-redis>=5.3.0,<6.0.0",
    "cryptography>=41.0.0,<42.0.0",
    "PyJWT>=2.8.0,<3.0.0",
    "Pillow>=9.5.0,<11.0.0",
    "python-magic>=0.4.27,<1.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "requests>=2.31.0,<3.0.0",
    "urllib3>=1.26.0,<2.0.0",
    "SQLAlchemy>=2.0.0,<3.0.0",
    "structlog>=23.1.0,<24.0.0",
    "sentry-sdk>=1.32.0,<2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0,<8.0.0",
    "pytest-django>=4.7.0,<5.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.11.0,<4.0.0",
    "pytest-xdist>=3.3.0,<4.0.0",
    "factory-boy>=3.3.0,<4.0.0",
    "faker>=19.0.0,<20.0.0",
    "coverage>=7.3.0,<8.0.0",
    "black>=23.7.0,<24.0.0",
    "flake8>=6.0.0,<7.0.0",
    "isort>=5.12.0,<6.0.0",
    "mypy>=1.5.0,<2.0.0",
    "responses>=0.23.0,<1.0.0",
    "freezegun>=1.2.0,<2.0.0",
    "httpx>=0.24.0,<1.0.0",
    "django-test-plus>=1.4.0,<2.0.0",
    "locust>=2.15.0,<3.0.0",
    "bandit>=1.7.0,<2.0.0",
    "safety>=2.3.0,<2.4.0",
    "pydocstyle>=6.3.0,<7.0.0",
]
test = [
    "pytest>=7.4.0,<8.0.0",
    "pytest-django>=4.7.0,<5.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.11.0,<4.0.0",
    "pytest-xdist>=3.3.0,<4.0.0",
    "factory-boy>=3.3.0,<4.0.0",
    "faker>=19.0.0,<20.0.0",
    "coverage>=7.3.0,<8.0.0",
]
docs = [
    "sphinx>=6.0.0,<7.0.0",
    "sphinx-rtd-theme>=1.3.0,<2.0.0",
    "myst-parser>=1.0.0,<2.0.0",
]

[project.urls]
Documentation = "https://github.com/kuriadn/fbs/tree/main/docs"
Source = "https://github.com/kuriadn/fbs"
Tracker = "https://github.com/kuriadn/fbs/issues"
Changelog = "https://github.com/kuriadn/fbs/releases"

[project.scripts]
fbs-manage = "fbs_app.management.commands:main"

[project.entry-points."django.apps"]
fbs_app = "fbs_app.apps.FBSAppConfig"
fbs_dms = "fbs_dms.apps.FBSDMSConfig"
fbs_license_manager = "fbs_license_manager.apps.FBSLicenseManagerConfig"

[tool.setuptools]
packages = ["fbs_app", "fbs_dms", "fbs_license_manager"]
include-package-data = true
zip-safe = false

[tool.setuptools.package-data]
fbs_app = ["**/*.json", "**/*.yaml", "**/*.yml", "**/*.xml", "**/*.html", "**/*.css", "**/*.js"]
fbs_dms = ["**/*.json", "**/*.yaml", "**/*.yml", "**/*.xml", "**/*.html", "**/*.css", "**/*.js"]
fbs_license_manager = ["**/*.json", "**/*.yaml", "**/*.yml", "**/*.xml", "**/*.html", "**/*.css", "**/*.js"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["fbs_app", "fbs_dms", "fbs_license_manager"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "fbs_project.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=fbs_app",
    "--cov=fbs_dms", 
    "--cov=fbs_license_manager",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
    "security: Security tests",
    "slow: Slow running tests",
]
testpaths = ["tests", "fbs_app/tests", "fbs_dms/tests", "fbs_license_manager/tests"]

[tool.coverage.run]
source = ["fbs_app", "fbs_dms", "fbs_license_manager"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/management/commands/*",
    "*/admin.py",
    "*/apps.py",
    "*/urls.py",
    "*/wsgi.py",
    "*/asgi.py",
    "*/settings.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
