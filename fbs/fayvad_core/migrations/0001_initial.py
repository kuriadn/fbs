# Generated by Django 4.2.7 on 2025-07-30 09:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OdooDatabase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('display_name', models.CharField(max_length=200)),
                ('odoo_db_name', models.CharField(max_length=100)),
                ('base_url', models.URLField(default='http://localhost:8069')),
                ('active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Odoo Database',
                'verbose_name_plural': 'Odoo Databases',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CacheEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.JSONField()),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('database', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fayvad_core.odoodatabase')),
            ],
            options={
                'verbose_name': 'Cache Entry',
                'verbose_name_plural': 'Cache Entries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BusinessRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('model_name', models.CharField(max_length=100)),
                ('operation', models.CharField(choices=[('create', 'Create'), ('read', 'Read'), ('update', 'Update'), ('delete', 'Delete')], max_length=20)),
                ('conditions', models.JSONField(default=dict)),
                ('actions', models.JSONField(default=dict)),
                ('active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=0)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fayvad_core.odoodatabase')),
            ],
            options={
                'verbose_name': 'Business Rule',
                'verbose_name_plural': 'Business Rules',
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RequestLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(max_length=10)),
                ('endpoint', models.CharField(max_length=255)),
                ('model_name', models.CharField(blank=True, max_length=100)),
                ('record_id', models.IntegerField(blank=True, null=True)),
                ('request_data', models.JSONField(default=dict)),
                ('response_status', models.IntegerField(blank=True, null=True)),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('database', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fayvad_core.odoodatabase')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Request Log',
                'verbose_name_plural': 'Request Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'created_at'], name='fayvad_core_user_id_02529d_idx'), models.Index(fields=['database', 'created_at'], name='fayvad_core_databas_aa5f20_idx'), models.Index(fields=['method', 'endpoint'], name='fayvad_core_method_a4954e_idx'), models.Index(fields=['model_name', 'created_at'], name='fayvad_core_model_n_265196_idx')],
            },
        ),
        migrations.CreateModel(
            name='ApiTokenMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('odoo_token', models.CharField(max_length=255)),
                ('odoo_user_id', models.IntegerField()),
                ('active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fayvad_core.odoodatabase')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'API Token Mapping',
                'verbose_name_plural': 'API Token Mappings',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'database')},
            },
        ),
    ]
