# Generated by Django 4.2.7 on 2025-08-29 06:53

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="LICLicenseManager",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "License Manager",
                "verbose_name_plural": "License Managers",
                "db_table": "lic_license_manager",
            },
        ),
        migrations.CreateModel(
            name="LICSolutionLicense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "solution_name",
                    models.CharField(
                        db_index=True,
                        help_text="Name of the solution this license applies to",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "solution_db",
                    models.CharField(
                        blank=True,
                        help_text="Solution-specific database for isolation (optional)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "license_type",
                    models.CharField(
                        choices=[
                            ("trial", "Trial"),
                            ("basic", "Basic"),
                            ("professional", "Professional"),
                            ("enterprise", "Enterprise"),
                        ],
                        default="trial",
                        help_text="Type of license",
                        max_length=50,
                    ),
                ),
                (
                    "license_key",
                    models.CharField(
                        blank=True,
                        help_text="External license key if applicable",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "expiry_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="License expiry date (None for perpetual licenses)",
                        null=True,
                    ),
                ),
                (
                    "features",
                    models.TextField(
                        default="[]", help_text="JSON array of enabled features"
                    ),
                ),
                (
                    "limits",
                    models.TextField(
                        default="{}", help_text="JSON object of feature limits"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("expired", "Expired"),
                            ("suspended", "Suspended"),
                            ("trial_expired", "Trial Expired"),
                        ],
                        default="active",
                        help_text="Current license status",
                        max_length=50,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("embedded", "Embedded"),
                            ("external", "External Service"),
                            ("file", "License File"),
                            ("environment", "Environment Variable"),
                        ],
                        default="embedded",
                        help_text="Source of the license",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Solution License",
                "verbose_name_plural": "Solution Licenses",
                "db_table": "lic_solution_license",
                "ordering": ["solution_name"],
            },
        ),
        migrations.CreateModel(
            name="LICFeatureUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "solution_name",
                    models.CharField(
                        db_index=True, help_text="Name of the solution", max_length=255
                    ),
                ),
                (
                    "feature_name",
                    models.CharField(
                        db_index=True,
                        help_text="Name of the feature being tracked",
                        max_length=255,
                    ),
                ),
                (
                    "usage_count",
                    models.IntegerField(
                        default=0, help_text="Current usage count for this feature"
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Feature Usage",
                "verbose_name_plural": "Feature Usage",
                "db_table": "lic_feature_usage",
                "ordering": ["solution_name", "feature_name"],
                "unique_together": {("solution_name", "feature_name")},
            },
        ),
    ]




